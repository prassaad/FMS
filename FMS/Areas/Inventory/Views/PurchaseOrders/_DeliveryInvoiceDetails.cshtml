@model FMS.Models.tbl_PurchaseOrders
@{
      System.Globalization.CultureInfo customCulture = System.Globalization.CultureInfo.CreateSpecificCulture("en-US");
}
<div class="clsmodalheader"> Delivery Invoice Details </div>
<div style="overflow: auto;z-index:9999;height:500px;" id="divNewDutylog">
<div id="InvDelvryloading" align="center" style="padding-right: 25px; z-index: 3; padding-left: 25px;
        left: 45%; top: 30%; padding-bottom: 15px; padding-top: 15px; position: absolute;">
        <img src="@Url.Content("~/Content/images/layout/loader.gif")" alt="Loading..." />
    </div>
<div class="row">
    <div class="col-md-12">
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th colspan="2">
                        <b style="font-size: 16px;"><i class="fa fa-info-circle"></i>&nbsp;Purchase Order Info.</b>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp; Ref.No#:
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RefNo)
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp; Order Dt:
                    </td>
                    <td>
                        @String.Format("{0:dd/MM/yyyy}", Model.OrderDt)
                    </td>
                </tr>
                 
                <tr>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp; Purchase Order Status :
                    </td>
                    <td>
                        @if (Model.Status.ToUpper() == "RFQ")
                        {
                            <span class="label label-important">Req. for Quotation</span>
                        }
                        else if (Model.Status.ToUpper() == "BIDRECEIVED")
                        {
                            <span class="label label-warning">Bid Received</span>
                        }
                        else if (Model.Status.ToUpper() == "CONFIRMORDER")
                        {
                            <span class="label label-pending">Confirm Order</span>
                        }
                        else if (Model.Status.ToUpper() == "PODRAFT")
                        {
                            <span class="label label-warning">PO Draft</span>
                        }
                        else if (Model.Status.ToUpper() == "DONE")
                        {
                            <span class="label label-success">Done</span>
                        }
                    </td>
                </tr>
               @if (!string.IsNullOrEmpty(Model.InvoiceTerms))
               {
                <tr>
                <td>
                    &nbsp;&nbsp;&nbsp;&nbsp; Invoice Terms:
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.InvoiceTerms)
                </td>
            </tr>
               }
                    @if (Model.DeliveryExpectedDt.ToString() != "" || Model.DeliveryExpectedDt != null)
                    {
                    <tr>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp; Delivery Expected Dt:
                    </td>
                    <td>
                            @String.Format("{0:dd/MM/yyyy}", Model.DeliveryExpectedDt)
                    </td>
                </tr>
                    }
            </tbody>
        </table>
    </div>
    
    <div class="col-md-12">
    @using (Html.BeginForm("SaveDeliveryInvoices", "PurchaseOrder", new { area = "Inventory" }, FormMethod.Post, new { id = "frmDeliveryInvoices", enctype = "multipart/form-data" }))
    {
    @Html.ValidationSummary(true)
         <table class="table table-striped table-condensed">
    <tr>
        <td colspan="2">
            <span id="spnErrormsg" style="color: Red;" class="clsmark"></span>
        </td>
    </tr>
     <tr>
         <th>
           Delivery Expected Date:<span class="clsmark">*</span>
         </th>
         <td>
               @Html.TextBox("DeliveryExpectedDt", String.Format(customCulture, "{0:dd/MM/yyyy}", string.IsNullOrEmpty(Model.DeliveryExpectedDt.ToString()) ? DateTime.Now : Model.DeliveryExpectedDt), new { @style = "width:150px;", @class = "BoxBackground datetimepicker" }) 
         </td>
     </tr>
       
         <tr>
            <td>
                 <span class="clsspan" >Invoice Terms:</span><span class="clsmark">*</span>
            </td>
            <td>
                   @Html.TextArea("InvoiceTerms", Model.InvoiceTerms, new { @class = "validate", @style = "resize:none;", @rows = "3", @cols = "45" })
            </td>
        </tr>
    <tr>
            <td colspan="2" style="text-align: center;">
                <input type="button" id="btnUpdateInvoice" value="Save" class="btn btn-primary" />
                <input type="button" class="btn btn-light-grey" data-dismiss="modal" value="Close" id="btnClose" />
                <input type="hidden" id="hdnPOId" name="hdnPOId" value="@Model.Id" />
            </td>
        </tr>
 </table>
    }
    </div>
</div>
</div>
<script type="text/javascript">
    $(function () {
        $('#InvDelvryloading').hide();
        var myDate = new Date();
        var dd = myDate.getDate();
        var mm = myDate.getMonth() + 1; //January is 0! 
        var yyyy = myDate.getFullYear();
        if (dd < 10) { dd = '0' + dd }
        if (mm < 10) { mm = '0' + mm }
        var TodayDate = dd + '/' + (mm) + '/' + yyyy;
        $(".datetimepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy'
        });
    });

    // Add Item List here
    $('#btnUpdateInvoice').click(function () {
        SaveDeliveryInvoice();
    });

    $('#btnClose').click(function () {
        $.modal.close();
    });
    function SaveDeliveryInvoice() {
       
        if ($.trim($('#DeliveryExpectedDt').val()) == "") {
            $("#spnErrormsg").show();
            $("#spnErrormsg").text("Please enter delivery expected date.");
            $('#DeliveryExpectedDt').focus();
            return false;
        }
        if ($.trim($('#InvoiceTerms').val()) == "") {
            $("#spnErrormsg").show();
            $("#spnErrormsg").text("Please enter invoice terms.");
            $('#InvoiceTerms').focus();
            return false;
        }
        var InvoiceTerms = $('#InvoiceTerms').val();
        var DeliveryExpectedDt = $('#DeliveryExpectedDt').val();
        var POId = $("#hdnPOId").val();
        var CampusId = $('#InvoiceCampusId').val();
        $('#InvDelvryloading').show();
        $.post('@Url.Action("SaveDeliveryInvoiceDetails", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId + '&DelExpectedDt=' + DeliveryExpectedDt + '&InvoiceTerms=' + encodeURIComponent(InvoiceTerms), function (data) {
            $('#InvDelvryloading').show();
            if (data.success) {
                alert(data.msg);
                $('#InvDelvryloading').hide();
                window.location.href = '@Url.Action("ViewPurchaseOrders", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId + '';
            }
            else {
                alert(data.msg);
                $('#InvDelvryloading').hide();
            }
        });
    }
    </script>