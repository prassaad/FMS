@model FMS.Models.InventoryModel.PurchaseOrder
@{
    ViewBag.Title = "Purchase Order Edit";
    Layout = "~/Areas/Inventory/Views/Shared/_InventryLayout.cshtml";
    
    List<FMS.Models.tbl_PurchaseOrderItemDetails> POrderDetList;
    System.Globalization.CultureInfo customCulture = System.Globalization.CultureInfo.CreateSpecificCulture("en-US");
    long Id = Model._PurchaseOrder.Id == null ? 0 : Model._PurchaseOrder.Id;
    string Status = Model._PurchaseOrder.Status == null ? "" : Model._PurchaseOrder.Status;
}
<h2><i class="fa fa-pencil-square teal"></i>  Purchase Order Edit</h2>
<form id="PurchaseOrderForm" action="@Url.Action("PurchaseOrderEdit", "PurchaseOrders", new { area = "Inventory" })" method="post" enctype="multipart/form-data">
<div class="bread_title" style="width: 100%">
     <div class="bread_navigation" style="width: 40%;">
         <ul>
            <li><i class="clip-arrow-left-2"></i><a id="FiscialYears" class="button_bg" href="@Url.Action("Index", "PurchaseOrders")">
                Cancel</a> </li>
            <li>
                <input type="button" id="btnOrderEdit" class="btn btn-primary btn-xs" value="Save Purchase Order" style="margin-top:-5px;" /></li>
                @if (Id != 0 && Status.Trim().ToUpper() == "EDIT")
                {
                <li>
                    <input type="button" id="btnReqFQ" class="btn btn-primary btn-xs" value=" RFQ " onclick="ConfirmRFQEntry('@Id')" style="margin-top:-5px;"  /></li>
                <li>
                    <input type="button" class="btn btn-green btn-xs" onclick="ConfirmPurchaseOrderEntry('@Id')" value="Confirm Order" style="margin-top:-5px;"  /></li>
                }
     </ul>
    </div>
     <div style="float: right; width: 45%; margin-top: -5px;">
        <ul id="tabs" class="wizard-steps">
            <li id="tab-hd-1" class="step current-tab active-step">@* if completed "completed-step"*@
                <div class="a-before">
                </div>
                <a href="javascript:void(0)"><span>1</span> PO. Draft </a>
                <div class="a-after">
                </div>
            </li>
            <li id="tab-hd-2" class="step">
                <div class="a-before">
                </div>
                <a href="javascript:void(0)"><span>2</span>RFQ</a>
                <div class="a-after">
                </div>
            </li>
            <li id="tab-hd-3" class="step">
                <div class="a-before">
                </div>
                <a href="javascript:void(0)"><span>3</span> Bid Received </a>
                <div class="a-after">
                </div>
            </li>
            <li id="tab-hd-4" class="step">
                <div class="a-before">
                </div>
                <a href="javascript:void(0)"><span>4</span> Confirm Order </a>
                <div class="a-after">
                </div>
            </li>
            <li id="tab-hd-5" class="step">
                <div class="a-before">
                </div>
                <a href="javascript:void(0)"><span>5</span> Done </a>
                <div class="a-after">
                </div>
            </li>
        </ul>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <p class="clsmark" style="color: Red; width: 320px;margin:10px;">
            &nbsp;(*) marked fields are mandatory.
        </p>
        <table cellpadding="5" class="table table-striped table-bordered">
            <tr>
                <td>
                    Supplier:<span class="clsmark">*</span>
                </td>
                <td>
                    @Html.DropDownList("SupplierId", null, "--Select Supplier--", new { @style = "width:180px;", @class = "form-control" })
                    <input type="hidden" id="status" name="status" value="@Model._PurchaseOrder.Status" />
                    @Html.Hidden("hdnPOId", Model._PurchaseOrder.Id)
                </td>
                <td>
                    PO Ref.No.<span class="clsmark">*</span>
                </td>
                <td>
                    @Html.TextBox("RefNo", Model._PurchaseOrder.RefNo, new { @style = "width:180px;background-color:#ddd", @maxLength = 30, @readonly = true })
                </td>
            </tr>
            <tr>
                <td>
                    Order Date:<span class="clsmark">*</span>
                </td>
                <td>
                    @Html.TextBox("OrderDt", String.Format(customCulture, "{0:dd/MM/yyyy}", Model._PurchaseOrder.OrderDt), new { @style = "width:150px;", @class = "BoxBackground datetimepicker" })
                </td>
                <td>
                    Excepted Date:<span class="clsmark">*</span>
                </td>
                <td>
                    @Html.TextBox("ExpectedDt", String.Format(customCulture, "{0:dd/MM/yyyy}", Model._PurchaseOrder.ExpectedDt), new { @style = "width:150px;", @class = "BoxBackground datetimepicker" })
                </td>
            </tr>
            <tr>
                <td>
                    UnTaxed Amount:<span class="clsmark">*</span>
                </td>
                <td>
                    @Html.TextBox("UnTaxed", Model._PurchaseOrder.UnTaxed, new { @style = "width:180px;", @onkeypress = "return numberValidatedot(event);", @maxLength = 8 })
                </td>
                 <td>
                    Terms & Conditions:
                </td>
                <td>
                    @Html.TextArea("TermsAndConditions", Model._PurchaseOrder.Terms_Conditions, new { @class = "validate", @style = "resize:none;", @rows = "3", @cols = "30" })
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="col-md-12">
                        &nbsp;&nbsp;<span class="label label-success">Note :</span> Please select a <code>supplier
                        </code>before selected items to be order.
                        <h3>
                            Add Purchase Order Items <a data-toggle="modal" href="#AddPurchaseOrderItems" id="btnItemAdd"
                                onclick="AddPurchaseOrderItems()" style="vertical-align: middle;" class="btn btn-primary">
                               <img src="@Url.Content("~/Content/images/plus.png")" alt="Add" style="margin-top:10px;height:15px;" /> </a>
                        </h3>
                    </div>
                    <br />
                    @{ ViewData["IsEdit"] = "1"; }
                    <input type="hidden" id="isEdit" value="1" />
                </td>
            </tr>
        </table>
    </div>
</div>
<div class="col-md-12">
    @{ POrderDetList = Model._PurchaseOrderDettails; }
    @if (POrderDetList != null)
    {
        <div id="POrdersDetList">
            @{ Html.RenderPartial("_OrderItemsListAdd", POrderDetList.OrderBy(a => a.ScheduleDt)); }
        </div>
    }
</div>
</form>
<div id="divSimpleModal" style="display: none; overflow: auto" class="simplemodal-widget">
    <div id="div_loading" align="center" style="padding-right: 25px; z-index: 3; padding-left: 25px;
        left: 30%; top: 35%; padding-bottom: 15px; padding-top: 15px; position: absolute;">
        <img src="@Url.Content("~/Content/images/layout/loading.gif")" alt="Loading..." />
    </div>
    <div id="divSimpleModalDet">
    </div>
    <a class="no"></a>
</div>

<script type="text/javascript">
    $('#loading').hide();
    $(function () {
        var myDate = new Date();
        var dd = myDate.getDate();
        var mm = myDate.getMonth() + 1; //January is 0! 
        var yyyy = myDate.getFullYear();
        if (dd < 10) { dd = '0' + dd }
        if (mm < 10) { mm = '0' + mm }
        var TodayDate = dd + '/' + (mm) + '/' + yyyy;
        $("#OrderDt").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy',
            maxDate : TodayDate
        }).on('changeDate', function (ev) {
            var stdate = document.getElementById("OrderDt");
            var endate = document.getElementById("ExpectedDt");
            if (checkEnteredDates(stdate.value, endate.value) == false) { //Validate expected date to find out if it is prior to order date
                $(this).val('');
            }
        });
        $("#ExpectedDt").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy',
            minDate : TodayDate
        }).on('changeDate', function (ev) {
            var stdate = document.getElementById("OrderDt");
            var endate = document.getElementById("ExpectedDt");
            if (checkEnteredDates(stdate.value, endate.value) == false) { //Validate expected date to find out if it is prior to order date
                $(this).val('');
            }
        });
    });
    function AddPurchaseOrderItems() {
        if (!ValidateMsg()) {
            return false;
        }
        else {
            $("#div_loading").fadeIn('slow');
            $('#divSimpleModal').modal
            ({
                containerCss: {
                    width: 610,
                    height: 550
                },
                close: false,
                onShow: function (dialog) {
                    dialog.data.find('.no').click(function () {
                        $.modal.close();
                    });
                    $("#btnItemAdd").attr("href", "#");
                    $('#div_loading').show();
                    var SupplierId = $('#SupplierId').val();
                    AddItems(SupplierId, 1);
                }
            });
        }
    }
    function AddItems(SupplierId, IsEdit) {
        $.ajax(
              {
                  type: "GET",
                  url: '@Url.Action("AddPurchaseOrderItem", "PurchaseOrders", new { area = "Inventory" })?SupplierId=' + SupplierId + "&IsEdit=" + IsEdit,
                  dataType: "html",
                  success: function (result) {
                      $('#div_loading').hide();
                      $('#divSimpleModalDet').html(result);
                  },
                  error: function (error) {
                      alert(error);
                  }
              });

          }
          $('#btnOrderEdit').click(function () {
              if (!ValidateMsg()) {
                  return false;
              }
             else if ($.trim($('#POrdersDetList').html()) == "") {
                  alert("Please add order items below to continue the process");
                  $('#RefNo').focus();
                  return false;
              }
              else {
                  $('#loading').show();
                  // save Issued stock here  
                  $.post('@Url.Action("PurchaseOrderEdit", "PurchaseOrders", new { area = "Inventory" })', $('#PurchaseOrderForm').serialize(), function (data) {
                      if (data.success) {
                          $('#loading').hide();
                          alert(data.msg);
                          window.location.href = '@Url.Action("PurchaseOrderEdit", "PurchaseOrders", new { area = "Inventory" })?Id=' + data.POId;
                      }
                      else {
                          $('#loading').hide();
                          alert(data.msg);
                      }
                  });
              }
          });
          function ValidateMsg() {
              var stdate = document.getElementById("OrderDt");
              var endate = document.getElementById("ExpectedDt");
              if ($.trim($('#SupplierId').val()) == "" || $.trim($('#SupplierId').val()) == "--Select Supplier--") {
                  alert("Please select supplier to continue process.");
                  $("#btnItemAdd").attr("href", "#");
                  $('#SupplierId').focus();
                  return false;
              }
              if ($.trim($('#RefNo').val()) == "") {
                  alert("Please enter Ref. No# to continue process.");
                  $("#btnItemAdd").attr("href", "#");
                  $('#RefNo').focus();
                  return false;
              }
              if ($.trim($('#OrderDt').val()) == "") {
                  alert("Please enter Order Date to continue process.");
                  $("#btnItemAdd").attr("href", "#");
                  $('#OrderDt').focus();
                  return false;
              }
              if ($.trim($('#ExpectedDt').val()) == "") {
                  alert("Please enter Expected Date to continue process.");
                  $("#btnItemAdd").attr("href", "#");
                  $('#ExpectedDt').focus();
                  return false;
              }
              //Validate expected date to find out if it is prior to order date
              if (checkEnteredDates(stdate.value, endate.value) == false) {
                  $("#btnItemAdd").attr("href", "#");
                  return false;
              }
              if ($.trim($('#UnTaxed').val()) == "") {
                  alert("Please enter UnTaxed Amount to continue process.");
                  $("#btnItemAdd").attr("href", "#");
                  $('#UnTaxed').focus();
                  return false;
              }

              return true;
          }
          //--------------------------------------------------------------------------
          //This function verifies if the order date is prior to expected date.
          //--------------------------------------------------------------------------
          function checkEnteredDates(stdateval, endateval) {
              //seperate the year,month and day for the first date
              var stryear1 = stdateval.substring(6);
              var strday1 = stdateval.substring(0, 2);
              var strmth1 = stdateval.substring(5, 3);
              var date1 = new Date(stryear1, strmth1, strday1);

              //seperate the year,month and day for the second date
              var stryear2 = endateval.substring(6);
              var strday2 = endateval.substring(0, 2);
              var strmth2 = endateval.substring(5, 3);
              var date2 = new Date(stryear2, strmth2, strday2);

              var datediffval = (date2 - date1) / 864e5;

              if (datediffval < 0) {
                  alert("Oredr date must be prior to expected date");
                  return false;
              }
              return true;
          }
          function numberValidatedot(evt) {
              var charCode = (evt.which) ? evt.which : evt.keyCode
              if (charCode > 47 && charCode < 58 || charCode == 127 || charCode == 8 || charCode == 46 || charCode == 9)
              { return true; } else { return false; }
          }

          function ConfirmRFQEntry(POId) {
                  $("#loading").fadeIn('slow');
                  $.post('@Url.Action("ConfirmRFQEntry", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId, function (data) {
                      if (data.success) {
                          alert(data.msg);
                          var delay = 1000; //1 seconds
                          setTimeout(function () {                         //your code to be executed after 1 seconds
                              window.location.href = '@Url.Action("ViewPurchaseOrders", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId + '';
                          }, delay);
                          $("#loading").fadeOut('slow');
                      }
                      else {
                          alert(data.msg);
                          $("#loading").fadeOut('slow');
                      }
                  });
              }
              function ConfirmPurchaseOrderEntry(POId) {
                  $("#loading").fadeIn('slow');
                  $.post('@Url.Action("ConfirmPurchaseOrder", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId, function (data) {
                      if (data.success) {
                          alert(data.msg);
                          var delay = 1000; //1 seconds
                          setTimeout(function () {                         //your code to be executed after 1 seconds
                              window.location.href = '@Url.Action("ViewPurchaseOrders", "PurchaseOrders", new { area = "Inventory" })?Id=' + POId + '';
                          }, delay);
                          $("#loading").fadeOut('slow');
                      }
                      else {
                          alert(data.msg);
                          $("#loading").fadeOut('slow');
                      }
                  });
              }
</script>