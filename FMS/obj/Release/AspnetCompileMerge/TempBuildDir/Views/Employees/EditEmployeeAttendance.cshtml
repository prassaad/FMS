@model FMS.Models.tbl_emp_attendance_details

@{
    ViewBag.Title = "Edit Employee Attendance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Employee Attendance</h2>
<div class="bread_title">
    <div class="bread_navigation">
        <ul>
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="lastactive">@Html.ActionLink("Employee Attendance", "EmployeeAttendance", "Employees")</li>
        </ul>
    </div>
</div>
<form id="frmEmpAttend" method="post" enctype="multipart/form-data">
<fieldset>
<legend>Attendance Details</legend>
<table class="table-striped table-condensed dTableR dataTable">
    <tr>
        <td colspan="2" style="padding-top: 10px;">
            <span id="SpanValidateMsg" style="color: Red; display: none; font-size: 14px; font-weight: bold;">
            </span>
            <p style="color:Red;">@(ViewBag.Message)</p>
        </td>
    </tr>
    <tr>
        <td>
            Emp No# <span style="color:Red;">*</span>
        </td>
        <td>
            @Html.TextBox("EmpNo", Model.EmpNo, new { @class = "txtAutoComplete", @tabindex = 1 })
            @Html.ValidationMessage("EmpNo")
            @Html.Hidden("ID", Model.ID)
            @Html.Hidden("EmpID",Model.EmpID)
        </td>
    </tr>
    <tr>
        <td>
            Emp. Name
        </td>
        <td>
            @Html.TextBox("EmployeeName", Model.tbl_employees.FirstName + " " + Model.tbl_employees.LastName , new { @class = "txtAutoComplete" })
        </td>
    </tr>
    <tr>
        <td>
            Site
        </td>
        <td>
            @Html.TextBox("Site", Model.Site, new { @class = "txtAutoComplete", @tabindex = 2 })
        </td>
    </tr>
    <tr>
        <td>
            LogIn Date
        </td>
        <td>
            @Html.TextBox("LogInDate", (Model.LogInDate == null ? "" : Model.LogInDate.Value.ToString("dd/MM/yyyy")), new { @class = "txtAutoComplete ClsHours", @tabindex = 3 })
        </td>
    </tr>
    <tr>
        <td>
            LogIn Time
        </td>
        <td>
            @Html.TextBox("LogInTime", Model.LogInTime, new { @class = "txtAutoComplete ClsHours", @tabindex = 4 })
        </td>
    </tr>
    <tr>
        <td>
            LogOut Date
        </td>
        <td>
            @Html.TextBox("LogOutDate", Model.LogOutDate == null ? "" : Model.LogOutDate.Value.ToString("dd/MM/yyyy"), new { @class = "txtAutoComplete ClsHours", @tabindex = 5 })
        </td>
    </tr>
    <tr>
        <td>
            LogOut Time
        </td>
        <td>
            @Html.TextBox("LogOutTime", Model.LogOutTime, new { @class = "txtAutoComplete ClsHours", @tabindex = 6 })
        </td>
    </tr>
    <tr>
        <td>
            Total Hours
        </td>
        <td>
            @Html.TextBox("TotalHours", Model.TotalHours , new { @class = "txtAutoComplete", @tabindex = 7 })
        </td>
    </tr> 
    <tr>
        <td>
        </td>
         <td>
            <input type="submit" value="Save Changes" id="btnSaveAttendance" />
         </td>
    </tr>
</table>
</fieldset>
</form>
<script src="../../Scripts/jquery.autocomplete.js" type="text/javascript"></script>
<script type="text/javascript">
    $('#EmployeeName').attr({ 'readonly': true, 'style': 'background-color:#DDD' }); 
    $('#TotalHours').attr({ 'readonly': true, 'style': 'background-color:#DDD' });

    $('#LogInDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: 'dd/mm/yy',
        onSelect: function (selected) {
            $("#LogOutDate").datepicker("option", "minDate", selected);
        }
    });
    $('#LogOutDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: 'dd/mm/yy',
        onSelect: function (selected) {
            $("#LogInDate").datepicker("option", "maxDate", selected);
        }
    });

    $("#EmpNo").autocomplete("/Employees/GetEmployeeNumber/", { minChars: 2, matchContains: true, onItemSelect: selectItem });

    function selectItem(li) {
        $('#EmpID').val(0);
        if (li == null) $('#EmpID').val(0);
        if (!!li.extra) {
            var sValue = li.extra[0];
        }
        else var sValue = li.selectValue;
        $('#EmpID').val(sValue);
        GetEmployeeName(sValue);
    }

    function GetEmployeeName(Id) {
        $.post('/Employees/GetEmployeeName?Id=' + Id, function (data) {
            $('#EmployeeName').val(data);
            $('#EmployeeName').attr({ 'readonly': true, 'style': 'background-color:#DDD' });
            $('#Site').focus();
        });
    }
    $('.ClsHours').change(function () {
        CalculateTotalhours();
    });
    // Calculate Total hours
    function CalculateTotalhours() {
        var LogInDate = $('#LogInDate').val();
        var LogInTime = $('#LogInTime').val();
        var LogOutDate = $('#LogOutDate').val();
        var LogOutTime = $('#LogOutTime').val();
        if (LogInDate == '') {
            return false;
        }
        if (LogInTime == '') {
            return false;
        }
        if (LogOutDate == '') {
            return false;
        }
        if (LogOutTime == '') {
            return false;
        }
       
        $.post('/Employees/CalculateTotalhours?LogInDate=' + LogInDate + '&LogInTime=' + LogInTime + '&LogOutDate=' + LogOutDate + '&LogOutTime=' + LogOutTime, function (data) {
            $('#TotalHours').val(data);
            $('#TotalHours').attr({ 'readonly': true, 'style': 'background-color:#DDD' });
        });
    }
    $('#LogInTime').change(function () {
        ValidateTimeFormat(this.value, this.id);
    });
    $('#LogOutTime').change(function () {
        ValidateTimeFormat(this.value, this.id);
    });


    function ValidateTimeFormat(TimeValue, FieldId) {
        var result = IsNumericTime($.trim(TimeValue))
        if (result == false) {
            $('#SpanValidateMsg').show();
            $('#SpanValidateMsg').html('Please enter valid time.Time format is HH:MM');
            document.getElementById("" + FieldId + "").value = '';
            $("#" + FieldId).focus();
            return false;
        }
        // Validate Time Format into HH:MM
        var myString = TimeValue.toString();
        var arr = myString.split(':');
        if (arr.length != 2) {
            $('#SpanValidateMsg').show();
            $('#SpanValidateMsg').html('Please enter valid time.Time format is HH:MM');
            document.getElementById("" + FieldId + "").value = '';
            $("#" + FieldId).focus();
            return false;
        }
        var hours = parseInt(arr[0]);
        var mins = parseInt(arr[1]);
        if (hours >= 24) {
            $('#SpanValidateMsg').show();
            $('#SpanValidateMsg').html('Hours should not be greater than 24');
            document.getElementById("" + FieldId + "").value = '';
            $("#" + FieldId).focus();
            return false;
        }
        if (mins >= 60) {
            $('#SpanValidateMsg').show();
            $('#SpanValidateMsg').html('Minutes should not be greater than 60');
            document.getElementById("" + FieldId + "").value = '';
            $("#" + FieldId).focus();
            return false;
        }
        $('#SpanValidateMsg').hide();
        return true;
    }
</script>