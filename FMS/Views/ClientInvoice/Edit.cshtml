@model FMS.Models.tbl_client_invoice

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .txtAutoComplete
    {
        width: 220px !important;
        background: #FFB;
        border: 1px #cccccc solid;
        border-radius: 5px;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
         maxlength="30";
    }
    .txtInput
    {
    	 width: 220px !important;
    	  border-radius: 5px;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
    }
    .txtInputtime
    {
    	 width: 71px !important;
    	  border-radius: 5px;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
    }
    .ac_loading {
			background: white url("../../Content/images/loading-icon.gif") right center no-repeat;
        }
 
    table tr td { width:100px; }
</style>
<h2>Edit Client Invoice</h2>
<div class="bread_title">
    <div class="bread_navigation">
        <ul>
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li class="lastactive">@Html.ActionLink("List of Client Invoice", "Index")</li>
        </ul>
    </div>
</div>

@using (Html.BeginForm("Edit", "ClientInvoice", new { id = Model.ID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
<fieldset>
<legend>Invoice Details</legend>
    <table class="table-striped table-condensed dTableR dataTable">
        <tr>
            <td colspan="2" style="padding-top: 10px;">
                <span id="SpanValidateMsg" style="color: Red; display: none; font-size: 14px; font-weight: bold;">
                </span>
                <p style="color: Red; font-style: italic;">
                    @(ViewBag.message)
                </p>
            </td>
        </tr>
        <tr>
            <td>
                Client Name <span style="color: Red;">*</span>
                <input type="hidden" id="ClientID" name="ClientID" />
            </td>
            <td>
                @Html.TextBox("Client", Model.tbl_clients.CompanyName, new { @class = "txtAutoComplete", @tabindex = 1 })
                @Html.ValidationMessage("ClientID")
            </td>
        </tr>
        <tr>
            <td>
                Invoice Date <span style="color: Red;">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.InvoiceDate, new { @class = "txtInput", @tabindex = 2 })
                @Html.ValidationMessageFor(model => model.InvoiceDate)
            </td>
        </tr>
        <tr>
            <td>
                Month & Year<span style="color: Red;">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.MonthYear, new { @class = "txtInput", @tabindex = 3 })
                @Html.ValidationMessageFor(model => model.MonthYear)
            </td>
        </tr>
        <tr>
            <td>
                Invoice No.<span style="color: Red;">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.InvoiceNum, new { @class = "txtInput", @tabindex = 4 })
                @Html.ValidationMessageFor(model => model.InvoiceNum)
            </td>
        </tr>
        <tr>
            <td>
                Invoice Particular
            </td>
            <td>
                @Html.TextBoxFor(model => model.InvoiceParticular, new { @class = "txtInput", @tabindex = 5 })
            </td>
        </tr>
        <tr>
            <td>
                Invoice Amount <span style="color: Red;">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.InvoiceAmount, new { @class = "txtInput", @tabindex = 6 })
                @Html.ValidationMessageFor(model => model.InvoiceAmount)
            </td>
        </tr>
        <tr>
            <td>
                CGST <span style="color: Red">@@ (@ViewBag.CGST) %  Eg: 2.5% </span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.CGST, new { @class = "txtInput isValidCurrency", @tabindex = 7 })
            </td>
        </tr>
        <tr>
            <td>
                SGST  <span style="color: Red">@@ (@ViewBag.SGST) % Eg: 2.5% </span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.SGST, new { @class = "txtInput isValidCurrency", @tabindex = 8 })
            </td>
        </tr>
        <tr>
            <td>
                IGST <span style="color: Red">@@ (@ViewBag.IGST) % Eg: 5% </span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.IGST, new { @class = "txtInput isValidCurrency", @tabindex = 9 })
            </td>
        </tr>

        <tr>
            <td>
                Amount with GST
            </td>
            <td>
                @Html.TextBox("NetAmountwithGST", "To be Fixed", new { @class = "txtInput isValidCurrency", @tabindex = 10 })
            </td>
        </tr>
        @*<tr>
            <td>
                Less GST
            </td>
            <td>
                @Html.TextBox("LessGST", "", new { @class = "txtInput isValidCurrency", @tabindex = 11 })
            </td>
        </tr>*@
        @*<tr>
            <td>
                Final Invoice Amt.
            </td>
            <td>
                @Html.TextBox("FinalInvoiceAmt", "", new { @class = "txtInput isValidCurrency", @tabindex = 12 })
            </td>
        </tr>*@
        <tr>
            <td>
                Less TDS <span style="color: Red">@@ (@ViewBag.ClientTDS) % </span>of Final Invoice
                Amt.
            </td>
            <td>
                @Html.TextBoxFor(model => model.TDS, new { @class = "txtInput isValidCurrency", @tabindex = 13 })
            </td>
        </tr>
        <tr>
            <td>
                Net Invoice Receivable
            </td>
            <td>
                @Html.TextBoxFor(model => model.NetTotal, new { @class = "txtInput isValidCurrency", @tabindex = 14 })
            </td>
        </tr>      
        
        <tr>
            <td>
                Invioce Doc.  
            </td>
            <td>
                <input type="file" name="InvDocFile" id="InvDocFile" />&nbsp;&nbsp;&nbsp;&nbsp; @if (Model != null)
                    {
                        if (Model.InvDocFile != null)
                        {
                            string ext = Model.InvDocFile.Split('.')[1];
                             if (ext == "pdf")
                             {
                               <a href="@Url.Action("ViewDocument", "Home", new { @foldername = "Client", @filename = Model.InvDocFile })" target="_blank"> 
                                 <img src="../../Content/images/pdf-icon.png" width="40" height="40" alt="Photo" /> </a>
                             }
                             else if (ext == "docx")
                             {
                                 <a href="/Content/Documents/Client/@Model.InvDocFile" target="_blank">   
                                 <img src="../../Content/images/Word-doc-icon.png" width="40" height="40" alt="Photo" /></a>
                             }
                             else if (ext == "txt")
                             {
                                 <a href="/Content/Documents/Client/@Model.InvDocFile" target="_blank">  
                                  <img src="../../Content/images/text-doc-icon.png" width="40" height="40" alt="Photo" /> </a>
                             }
                             else
                             {
                               <a href="/Content/Documents/Client/@Model.InvDocFile" target="_blank"> 
                                <img src="../../Content/Documents/Client/@Model.InvDocFile" width="40" height="40" alt="Photo" /> </a>
                             }
                        }
                    }
            </td>
        </tr>
        <tr>
            <td>
                Remark
            </td>
            <td>
                @Html.TextAreaFor(model => model.Remark, new { @class = "txtInput", @tabindex = 11 })
            </td>
        </tr>
        <tr>
            <td>
            </td>
            <td>
                <input type="submit" style="margin-top: 5px;" id="btnInvoice" class="btnnewlog" value="Save Invoice"
                    tabindex="12" />
            </td>
        </tr>
    </table>
</fieldset>
}
<script src="../../Scripts/jquery.autocomplete.js" type="text/javascript"></script>
<script type="text/javascript" language="javascript">
    $(function () {
        $('input[name=MonthYear]').bind('keyup keydown keypress', function (evt) {
            return false;
        });
    });
    $('#div_loading').hide();
    $('#ClientID').val('@Model.ClientID');
    $(document).ready(function () {
        var InvoiceAmt = $('#InvoiceAmount').val();
         
        $("#divlog_loading").fadeOut('slow');
        $("#Client").autocomplete("/LogsheetManagement/getAjaxResult/", { minChars: 2, matchContains: true, onItemSelect: selectItem });
        $("#divlog_loading").hide();
        $("#divlog_loading").fadeOut('slow');
        $("#Client").focus();
        var myDate = new Date();
        var prettyDate = myDate.getDate() + '/' + (myDate.getMonth() + 1) + '/' + myDate.getFullYear();
        //$("#InvoiceDate").val(prettyDate);
        $('#InvoiceDate').datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy',
            onSelect: function () {
                $('input[tabindex="3"]').focus();
            }
        });
        $('#MonthYear').datepicker({
            changeMonth: true,      //provide option to select Month
            changeYear: true,       //provide option to select year
            showButtonPanel: true,  // button panel having today and done button
            dateFormat: 'MM yy',    //set date format
            onClose: function (dateText, inst) {
                var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                $(this).datepicker('setDate', new Date(year, month, 1)); //here set the date when closing.
                //$(this).blur(); //remove focus input box
            }
        });
    });

    function selectItem(li) {
        $('#ClientID').val(0);
        if (li == null) $('#ClientID').val(0);
        if (!!li.extra) {
            var sValue = li.extra[0];
        }
        else var sValue = li.selectValue;

        $('#ClientID').val(sValue);
        $('input[tabindex="2"]').focus();
    }

    $(".isValidCurrency").change(function () {
        var title = isValidRupees(this.value);
        if (title == false) {
            $("#SpanValidateMsg").show();
            $("#SpanValidateMsg").text("Please enter valid currrency.");
            document.getElementById("" + this.id + "").value = '';
            $('html,body').animate({ scrollTop: 0 }, 'slow');
        }
        else {
            $("#SpanValidateMsg").hide();
        }
    });


</script>